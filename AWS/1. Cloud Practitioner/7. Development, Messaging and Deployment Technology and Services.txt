WHAT IS CI/CD 

- What is CI/CD 
- Benefits 

- What is CI/CD
It is a Software development best practice
The idea is to Automate everything. Example - Code integration, build, test and deployment 
It makes change easy by Applying multiple small changes each day

- Benefits
Automation                          -   Fast, Repeatable and scalable
Manual Effort Avoided               -   Slow, Error prone, inconsistent Effort Avoided
Small Changes Applied frequently    -   Catch bugs while they are small and simple to fix
___________________________________________________________________________________________________________________

AWS DEPLOYMENT TOOLS 

- AWS CodeCommit
- AWS CodeBuild
- AWS CodeDeploy
- AWS CodePipeline
- Exam Tips

- AWS CodeCommit(For Merging)
Source Control service enabling terms to collaborate on code, html pages, scripts, images and binaries.
It is a central code repository just like Private git repo in the cloud

- AWS CodeBuild(For Preparing)
Compiles source code, runs tests and produces packages that are ready to deploy
It takes code from CodeCommit and use code to build deployable artifacts.
Artifacts like packages/docker images   -   .net core package, docker image, Node.js package 

- AWS CodeDeploy(For Deployment)
Automated Deploy service to deploy sofware to EC2 instances/ On Premises systems/ Lambda
Release features, avoids downtime and reduces risk with process 

- AWS CodePipeline(Overall Process)
End-to-end solution, build, test and deploy your application every time there is a code change
Automated CI/CD pipeline 
___________________________________________________________________________________________________________________

DEMO: WORKING WITH AWS CLOUDSHELL AND THE AWS CLI 

Scenario
You have been tasked with creating an S3 bucket and uploading a file. 
You would like to accomplish this using the AWS CLI running in the CloudShell instead of using the console 

1   -   Launch the CloudShell           -   Console like Icon is on top bar
                                        -   CloudShell is a browser based shell with CLI pre-installed
2   -   Use the AWS CLI                 -   'aws --version'
                                        -   'aws s3 mb s3://BucketName' (Make Bucket)
                                        -   'aws s3 ls' (List buckets)
                                        -   'echo "My new File" >> fileName.txt'
                                        -   'ls'
                                        -   'cat fileName.txt'
                                        -   'aws s3 cp fileName.txt s3://BucketName' (Copy)
                                        -   'aws s3 ls s3://BucketName'
3   -   Review the CLI Documentation    -   'aws s3 mb help'
                                        -   https://docs.aws.amazon.com/cli/latest
___________________________________________________________________________________________________________________

DEMO: USING AWS CLOUD9

Scenario 
You are a developer.
You need an IDE platform that lets you write, run and debug your code
That supports the most popular programming languages like JS, Python, Ruby, C++ and lets you run AWS CLI commands

Cloud9 is an integrated IDE that we can use inside of our browser. It comes with AWS CLI

1   -   Create a Cloud9 environment     -   Search for Cloud9 in Management Console
                                        -   Create an environment(My-IDE), New EC2, t3.small, Linux 2, Create
                                        -   We can open it through Open link and it will open IDE
2   -   Explore Cloud9 Code Editor
3   -   Run some AWS CLI commands       -   Create a S3 bucket and copy file to the bucket from IDE 
___________________________________________________________________________________________________________________

UNDERSTANDING AWS CODE ARTIFACT

It is an Artifact repository It makes it easy for developers to find the softare packages they need
A package is a bundle of software
Includes open-source and in-house developed software
It lets developer to securely store, publish and share softare packages that we need for software development process
Example -   Maven, NPM, Python packages

Scenario    -   Multiple Development Teams
Enables developers to get correct version of software packages like npm 

Artifacts includes Documentation, Compiled applications, Deployable packages and Libraries
___________________________________________________________________________________________________________________

DECOUPLING APPLICATION COMPONENTS

- Tight Coupling
Monolithic Application where all components are dependent on each other
Coupling means dependencies between components 
Problem occurs when one part of the system is faster or slower than another. 
One failed component can bring the whole system down 

- Loose Coupling
Microservice based architectures where components operate independently
One component doesn't need to wait until another component has completed its work before moving on to the next task
Data and messages are moved between components of the application
A failed or slow component doesn't affect other parts of the system 

Integration Approach
- Queues            -   SQS(Simple Queue Service)(For loose coupling)
- Notifications     -   SNS(Simple Notification Service)
- Events            -   EventBridge
___________________________________________________________________________________________________________________

INTRODUCING AMAON SIMPLE NOTIFICATION SERVICE(SNS)

Set up, operate and send notifications(SMS text message or email)
Messages sent from an application can be immediately delivered to subscribers or other applications
SNS uses a Pub-Sub Model(Publish and Subscribe)
Applications publish/push messages to a Topic. Subscribers recieve messages from the Topic. 
Topic is simply an access point allowing recipients to subscribe and recieve the identical copy of the same notification
___________________________________________________________________________________________________________________

CREATE AND SUBSCRIBE TO AN AWS SNS TOPIC 

On console, search SNS 
Create a Topic, default settings
Subscribe to Topic. Create a subscription in Topic. Select topic, select protocol as email, enter email address, Create it
Confirm subscription from email inbox
Test Topic subscription. Search EC2 > Instances > select instance and copy instance id. Stop the instance.
Search Cloudwatch, create alarm button, create alarm, select metric and paste the instance id, select preinstance metrics, and search failed statuacheckinstance and change the period to 1 min, greater than or equal to 1, treat missing data as bad, next
Selct Topic, add notification > select ok. Add another notification insufficient data, Name alarm, create
___________________________________________________________________________________________________________________

INTRODUCING SIMPLE QUEUE SERVICE (SQS)

- Features
SQS is pull based 
Multiple components can add and consume messages from same queue
Messages are processed asynchronously
Guaranteed to be processed at least once 
Example - Money Transfer Application
SQS improves performance and the ability to scale and support millions of concurrent requests
SQS is a distributed message queueing system, allows us to decouple the components of an application so that they are independent 
___________________________________________________________________________________________________________________

STANDARD AND FIFO QUEUES

- SQS Standard Queues(Default)
Guarantees that a message is delivered at least once 
Best-effort ordering means that the messages are generally delivered in the same order as they are sent
Occasionally more than one copy of a message might be delivered out of order

- SQS FIFO Queues
Order in which messages are sent and received is strictly preserved
Exactly one processing means duplicates are not introduced
___________________________________________________________________________________________________________________

SHORT POLLING VS LONG POLLING

These are setting that we can configure which define how frequently the consumers of your messages is checked
- Short Polling 
Returns a response immediately even if the message queue being polled is empty
- Long Polling
Periodically polls the queue
The queue doesn't respond until a message arrives, or the long poll times out
Fewer empty responses, hence saves money
___________________________________________________________________________________________________________________

WHAT IS AMAZON SIMPLE EMAIL SERVICE (SES)

Cloud based email service that enables your application to send richly formatted Html emails 
Example - Order confirmation, Market campaign with details of new launches, soecial offers and discounts
Send emails in bulk
Track open or click-through rates
Understand the effectiveness of your campaign
___________________________________________________________________________________________________________________

INTRODUCING AMAZON EVENTBRIDGE

Service that allows us to easily configure event driven systems
Define tasks that can be run on a predefined schedule

EventBridge is all about event-driven architecture
Event is a change in state 
Can be generated by AWS services like EC2, CloudWatch, CloudTrail
Rules defines some targets to be triggered like EC2, Lambda and SNS
Example - An EC2 instance reboots, causing an event to be sent to EventBridge
This triggers a rule that invokes an action to send an email using SNS

It can also be used to handle scheduled events
EventBridge rules that run on a schedule
We can set a rule to run once an hour or day or At the same time on a specfic day, week or month 
___________________________________________________________________________________________________________________

UNDERSTANDING STEP FUNCTIONS

Example - Store Checkout Process
Check Inventory > Hold Product > Bill Customer
What if payment failed > Remove Hold
Each process is handled by lambda function. we can use step function to manage logic of lambda functions 
It can handle failed scenarios to send email

It provides a Visual Interface 
Build and run serverless applications as a series of steps
Each step in your application executed in order, as defined by your business logic
The output of one step may act as an input to the next 

Parallel steps
Start > Process photo > Extracts metadata, Resize image and Facial recognition > Loaded in database > End
Each process can be handled by different lambda functions and end to end by step functions

Uses 
Visualise - Great way to visualise your serverless application 
Automate - Step Functions automatically trigger and track each step
Logging - Step functions log the state of each step, so you can track what went wrong and where
___________________________________________________________________________________________________________________

DEPLOYING INFRASTRUCTURE AS CODE WITH AWS CLOUDFORMATION 

IaaC - Provides Environment like combination of S3, Lambda, DynamoDB, SQS, SNS, EC2
- CloudFormation
Manage, Configure and Provision your AWS infrastructure as a code
Resources defined in a CloudFormation template(yaml/json) > CloudFormation interprets the template and makes API calls to create the resources you have defined. The result is known as CloudFormation stack
It lets us deploy AWS resources using an IaaS approach

- Uses
Consistent - Infrastructure is provisioned consistently with fewer mistakes
Quick and Efficient - Less time and effort than configuring things manually
Free to use - You are only charged for the AWS resources you create using CloudFormation
___________________________________________________________________________________________________________________

CREATE A DYNAMODB TABLE USING CLOUDFORMATION 

Template - https://guthub.com/linuxacademy/content-aws-certified-cloud-practitioner/blob/main/labs/3vreate-dynamodb-table-using-cloudformation/acg-dynamodb-template.yaml

Console > CloudFormation
Create a Stack - with new resources standard > Upload template file > Stack name > Create > Create complete
Console > DynamoDB > Tables > Inventory table is there
___________________________________________________________________________________________________________________

WHAT IS AWS ELASTIC BEANSTALK

Example - Developer busy, focus on code and not infra. Infra should be resilient, load balanced and scalable

Elastic BeanStalk provisions infra needed to run application in production including installation and management of application stack needed to run our application
Capacity provisioning, Load balancing, Auto scaling and Application health monitoring using cloudwatch

It allows developers to focus on code
No need to worry about configuring the underlying infra needed to run the application 
Get your application to market faster
Fastest and simplest way to
deploy your application in AWS 
Also handles patching and updates

Deploys and scales your web applications including the web application server platform
It provisions AWS resources for you eg - EC2, RDS, S3, Elastic load balancers, Auto Scaling Groups, etc
Supports programming languages like .net, php, java, nodejs, tomcat, IIS, nginx, docker
OS and application server updates monitoring metrics, and health checks are all included
___________________________________________________________________________________________________________________

DEMO: DEPLOYING AN APPLICATION USING ELASTIC BEANSTALK

Scenario
You have developed an application in PHP.
You would like to run you application in AWS, however you do not want to provision, configure or manage any EC2 instances yourself. 
You have decided to deploy your application using Elastic BeanStalk

- Create a service rooe for Elastic Beanstalk 
- Create an EC2 instance role formElastic BeanStalk
- Upload the provided code 
https://github.com/pluralsight-cloud/AWS-Certified-Cloud-Practitioner-CCP-CLF-C02

Console > IAM > Roles > Create > Aws service, search elastic beanstalk customizable > Role name > Create
Create role > Aws service > search EC2 > permission awsElasticBeanstalkReadOnly > Role name > Create
Console > Elastic Beanstalk > Create application > app name > Platform as php > Upload the zip file > Use existing service role > Select ec2 role > Health reporting basic > manage platform update disable > Submit
Clico the domain and it will take to website

It deploys and scales your web applications including the application server platform 
Provisions the AWS resources for you eg - EC2, S3, RDS, Elastic Load Balancers, Auto Scaling Groups, etc
___________________________________________________________________________________________________________________

DEMO: USING AWS X-RAY TO IDENTIFY PERFORMANCE ISSUES

- X-Ray
X-Ray is a tool that help developers analyze and debug distributed applications
Allows us to troubleshoot the root cause of performance issues and errors
Provides a visualization of your application's underlying components
It provides an end-to-end view of reuests as they travel through your application
This information can be used to troubleshoot connectivity and performance issues

- Scenario
You would like to understand how X-Ray can be used to monitor performance and health of a distributed application
You decide to install a sample application that uses several AWS services

1   -   Install a sample Tic Tac Toe application using CloudFormation
2   -   Play a game of Tic Tac Toe 
3   -   Use X-Ray to view the application performance and health

Search X-Ray > Setup demo app through CloudFormation
Select Outputs tab > Open LoadBalancer url > Play game > View Service map > Check legend
___________________________________________________________________________________________________________________

DEVELOPMENT, MESSAGING AND DEVELOPMENT EXAM TIPS 

CI      -   Integrating or merging small code of changes frequently - at least once per day 
CD      -   Automating the build, test and deployment functions. Bugs are caught early

Deployment Tools 
CodeCommit  -   Source control service enabling teams to collaborate on code, html, scripts, images and binaries
CodeBuild   -   Compiles source code, runs tests and produces packages that are ready to deploy 
CodeDeploy  -   Automates code deployment, eg - to EC2, Lambda and on-premises servers
CodePipeline-   End-to-end solution, build test and deploy your application every time there is a code change 

AWS CloudShell  -   Browser based shell with the AWS CLI pre-installed 
AWS CLI         -   A command line tool used to manage AWS services

AWS Cloud9          -   Browser based IDE that lets developers write, run and debug code
Pre-installed Tools -   AWS CLI support for the most popular programming languages like JS, Python, Ruby and C++

CodeArtifact    -   It is an artifact repository that makes it easy for developers to find the software versions they need 
                    Artifacts like Documentation, compiled applications, deployable packages and libraries 
                    Third party or in-house developed 
                    Developers can find approved packages and can also publish their own

Coupling        -   Interdependencies or connections between components of a system 
Tight Coupling  -   Different parts of the system are highly dependent on each other. If one part fails, it could bring the whole system down 
Loose Coupling  -   Decoupled components can be connected to each other but are not dependent on each other 

SNS is a service that allows us to send/push notifications eg - email, SMS text messages 
It uses a Pub-Sub model. Subscribers must subscribe to a Topic 
A Topic is an access point, allowing subscribers to receive Notifications

SQS
Distributed messaging system , Pull-based.
Allows us to decouple the components of an application so they are independent 
Standard    -   Best-effort ordering. Message delivered atleast one. Occasionally duplicates. Default Queue type
FIFO        -   Order Strictly preserved. Message delivered once. No duplicates. Good for banking transactions

Short Polling   -   A response is returned immediately even if no messages are there in the queue. A cost per response 
Long Polling    -   Periodically polls the queue and only returns a response hen message is in the queue or the timeout is reached 

SES     -   Allows us to sench richly formatted HTML emails from your Applications. Eg - Marketing campaign, Confirmation of an order

EventBridge     -   Events are state changes generated by services like EC2, CloudWatch, CloudTrail
                    Targets respond by taking some action like sending an SNS notification
                    Rules match events and route them to the correct target 
                    Scheduled events let us schedule an action in advance like run a process in a week/month 

StepFunctions   -   Visualize   -   Great way to visualize your serverless application
                    Automate    -   Automatically trigger and track each step
                    Logging     -   Logs the state of each step, so you can track what went wrong and where

CloudFormation  -   Lets us deploy AWS resources using as IaaC approach 
                    Resources are defined using template written in yaml/json 
                    Allows us to uickly provision AWS resources in a consistent way with fewer errors 

Elastic BeanStalk   -   Deploys and scales your web applications, including web application server platform 
                        Provision AWS resources for you. Eg - EC2, RDS, S3, Elastic Load Balancers, Auto Scalig Groups, etc
                        Java, .net, php, nodejs, python, ruby, go, apache tomcat, docker 
                        OS and application server updates, monitoring metrics, and health checks are all included 

X-Ray   -   Provides end-to-end view of requests as they travel through the application
            This information can be used to troubleshoot connectivity and performance issues 
___________________________________________________________________________________________________________________

QUIZ

- Which service can be used to decouple the components of an application                                                            -   SQS 
- Which AWS service can be used to automatically install your application code onto EC2, on-premises systems and Lambda             -   CodeDeploy 
- Which developer tool allows you to write code within your web browser                                                             -   Cloud9 
- Which service could you recommend to a developer to automate the software release process                                         -   CodePipeline 
- You would like to send marketing information to your customers with details of product launches and discount codes.
  Which service will allow you to send HTML formatted emails                                                                        -   SES 
- Which AWS service can be used to centrally store and version control your application source code, binaries and libraries         -   CodeCommit
- Which of the following are suitable to store in CodeArtifact                                                                      -   Document, Libraries, Deployable Packages, Compiled applications 
- Which one of the following practice allows multiple developer working on same application to merge code changes frequently,
  without impacting each other and enables the identification of bugs early on in the release process                               -   CI 
- Your company has moved to AWS so it can use IaaC. You would like to have the ability to provision AWS Infrastructure in a 
  consistent and Repeatable way. Which service should you use to achieve this                                                       -   CloudFormation
- Which AWS service can both send text and email messages from your applications                                                    -   SNS 
- Which service allows you to practice IaaC by provisioning your AWS resource via scripted templates                                -   CloudFormation
- Which AWS service is used for notifications and messaging                                                                         -   SNS 
- Which AWS service is used to build event-driven applications that respond to state changes triggered by AWS service like EC2      -   EventBridge 
- Which of the following are true statements about SQS                                                                              -   Standard queue order not preserved
- Which of the following AWS service can be used to quickly and easily delpoy a Java web application, including provisioning the 
  EC2 instances needed to run the application, configuring an Elastic Load Balancer and Apache Tomcat                               -   BeanStalk
- Which AWS service provides an end-to-end view of requests as they travel through a distributed application, and can be used 
  to troubleshoot connectivity and performance issues                                                                               -   X-Ray 
- Which AWS service can be used to compile code, run tests and also package code                                                    -   CodeBuild 
- Which of the following is the correct descripton of a loose coupling in relation to an application                                -   Not dependent but connected 
- Which of the following AWS service provides a browser based shell with AWS CLI pre installed                                      -   CloudShell
- Which of the following is an artifact repository that makes it easy for developers to find approved software packages
  they need to build the applications                                                                                               -   CodeArtifact
- Which of the following AWS service can be used to visualize and orchestrate a serverless application                              -   StepFunctions
- Which of the following SQS configurations is generally recommended for most use case and why                                      -   Long Polling recommended

